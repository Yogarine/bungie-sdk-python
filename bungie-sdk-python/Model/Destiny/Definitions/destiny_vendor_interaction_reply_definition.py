# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyVendorInteractionReplyDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'item_rewards_selection': 'int',
        'reply': 'str',
        'reply_type': 'int'
    }

    attribute_map = {
        'item_rewards_selection': 'itemRewardsSelection',
        'reply': 'reply',
        'reply_type': 'replyType'
    }

    def __init__(self, item_rewards_selection=None, reply=None, reply_type=None):  # noqa: E501
        """DestinyVendorInteractionReplyDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._item_rewards_selection = None
        self._reply = None
        self._reply_type = None
        self.discriminator = None

        if item_rewards_selection is not None:
            self.item_rewards_selection = item_rewards_selection
        if reply is not None:
            self.reply = reply
        if reply_type is not None:
            self.reply_type = reply_type

    @property
    def item_rewards_selection(self):
        """Gets the item_rewards_selection of this DestinyVendorInteractionReplyDefinition.  # noqa: E501

        The rewards granted upon responding to the vendor.  # noqa: E501

        :return: The item_rewards_selection of this DestinyVendorInteractionReplyDefinition.  # noqa: E501
        :rtype: int
        """
        return self._item_rewards_selection

    @item_rewards_selection.setter
    def item_rewards_selection(self, item_rewards_selection):
        """Sets the item_rewards_selection of this DestinyVendorInteractionReplyDefinition.

        The rewards granted upon responding to the vendor.  # noqa: E501

        :param item_rewards_selection: The item_rewards_selection of this DestinyVendorInteractionReplyDefinition.  # noqa: E501
        :type: int
        """

        self._item_rewards_selection = item_rewards_selection

    @property
    def reply(self):
        """Gets the reply of this DestinyVendorInteractionReplyDefinition.  # noqa: E501

        The localized text for the reply.  # noqa: E501

        :return: The reply of this DestinyVendorInteractionReplyDefinition.  # noqa: E501
        :rtype: str
        """
        return self._reply

    @reply.setter
    def reply(self, reply):
        """Sets the reply of this DestinyVendorInteractionReplyDefinition.

        The localized text for the reply.  # noqa: E501

        :param reply: The reply of this DestinyVendorInteractionReplyDefinition.  # noqa: E501
        :type: str
        """

        self._reply = reply

    @property
    def reply_type(self):
        """Gets the reply_type of this DestinyVendorInteractionReplyDefinition.  # noqa: E501

        An enum indicating the type of reply being made.  # noqa: E501

        :return: The reply_type of this DestinyVendorInteractionReplyDefinition.  # noqa: E501
        :rtype: int
        """
        return self._reply_type

    @reply_type.setter
    def reply_type(self, reply_type):
        """Sets the reply_type of this DestinyVendorInteractionReplyDefinition.

        An enum indicating the type of reply being made.  # noqa: E501

        :param reply_type: The reply_type of this DestinyVendorInteractionReplyDefinition.  # noqa: E501
        :type: int
        """

        self._reply_type = reply_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyVendorInteractionReplyDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
