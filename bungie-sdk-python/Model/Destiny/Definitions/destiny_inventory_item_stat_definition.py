# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyInventoryItemStatDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'stat_hash': 'int',
        'value': 'int',
        'minimum': 'int',
        'maximum': 'int'
    }

    attribute_map = {
        'stat_hash': 'statHash',
        'value': 'value',
        'minimum': 'minimum',
        'maximum': 'maximum'
    }

    def __init__(self, stat_hash=None, value=None, minimum=None, maximum=None):  # noqa: E501
        """DestinyInventoryItemStatDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._stat_hash = None
        self._value = None
        self._minimum = None
        self._maximum = None
        self.discriminator = None

        if stat_hash is not None:
            self.stat_hash = stat_hash
        if value is not None:
            self.value = value
        if minimum is not None:
            self.minimum = minimum
        if maximum is not None:
            self.maximum = maximum

    @property
    def stat_hash(self):
        """Gets the stat_hash of this DestinyInventoryItemStatDefinition.  # noqa: E501

        The hash for the DestinyStatDefinition representing this stat.  # noqa: E501

        :return: The stat_hash of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :rtype: int
        """
        return self._stat_hash

    @stat_hash.setter
    def stat_hash(self, stat_hash):
        """Sets the stat_hash of this DestinyInventoryItemStatDefinition.

        The hash for the DestinyStatDefinition representing this stat.  # noqa: E501

        :param stat_hash: The stat_hash of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :type: int
        """

        self._stat_hash = stat_hash

    @property
    def value(self):
        """Gets the value of this DestinyInventoryItemStatDefinition.  # noqa: E501

        This value represents the stat value assuming the minimum possible roll but accounting for any mandatory bonuses that should be applied to the stat on item creation.  In Destiny 1, this was different from the \"minimum\" value because there were certain conditions where an item could be theoretically lower level/value than the initial roll.   In Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some other system change occurs... thus in practice, value and minimum should be the same in Destiny 2. Good riddance.  # noqa: E501

        :return: The value of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DestinyInventoryItemStatDefinition.

        This value represents the stat value assuming the minimum possible roll but accounting for any mandatory bonuses that should be applied to the stat on item creation.  In Destiny 1, this was different from the \"minimum\" value because there were certain conditions where an item could be theoretically lower level/value than the initial roll.   In Destiny 2, this is not possible unless Talent Grids begin to be used again for these purposes or some other system change occurs... thus in practice, value and minimum should be the same in Destiny 2. Good riddance.  # noqa: E501

        :param value: The value of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :type: int
        """

        self._value = value

    @property
    def minimum(self):
        """Gets the minimum of this DestinyInventoryItemStatDefinition.  # noqa: E501

        The minimum possible value for this stat that we think the item can roll.  # noqa: E501

        :return: The minimum of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :rtype: int
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this DestinyInventoryItemStatDefinition.

        The minimum possible value for this stat that we think the item can roll.  # noqa: E501

        :param minimum: The minimum of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :type: int
        """

        self._minimum = minimum

    @property
    def maximum(self):
        """Gets the maximum of this DestinyInventoryItemStatDefinition.  # noqa: E501

        The maximum possible value for this stat that we think the item can roll.  WARNING: In Destiny 1, this field was calculated using the potential stat rolls on the item's talent grid. In Destiny 2, items no longer have meaningful talent grids and instead have sockets: but the calculation of this field was never altered to adapt to this change. As such, this field should be considered deprecated until we can address this oversight.  # noqa: E501

        :return: The maximum of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :rtype: int
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this DestinyInventoryItemStatDefinition.

        The maximum possible value for this stat that we think the item can roll.  WARNING: In Destiny 1, this field was calculated using the potential stat rolls on the item's talent grid. In Destiny 2, items no longer have meaningful talent grids and instead have sockets: but the calculation of this field was never altered to adapt to this change. As such, this field should be considered deprecated until we can address this oversight.  # noqa: E501

        :param maximum: The maximum of this DestinyInventoryItemStatDefinition.  # noqa: E501
        :type: int
        """

        self._maximum = maximum

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyInventoryItemStatDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
