# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyMilestoneRewardEntryDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'reward_entry_hash': 'int',
        'reward_entry_identifier': 'str',
        'items': 'list[DestinyItemQuantity]',
        'vendor_hash': 'int',
        'display_properties': 'DestinyDisplayPropertiesDefinition',
        'order': 'int'
    }

    attribute_map = {
        'reward_entry_hash': 'rewardEntryHash',
        'reward_entry_identifier': 'rewardEntryIdentifier',
        'items': 'items',
        'vendor_hash': 'vendorHash',
        'display_properties': 'displayProperties',
        'order': 'order'
    }

    def __init__(self, reward_entry_hash=None, reward_entry_identifier=None, items=None, vendor_hash=None, display_properties=None, order=None):  # noqa: E501
        """DestinyMilestoneRewardEntryDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._reward_entry_hash = None
        self._reward_entry_identifier = None
        self._items = None
        self._vendor_hash = None
        self._display_properties = None
        self._order = None
        self.discriminator = None

        if reward_entry_hash is not None:
            self.reward_entry_hash = reward_entry_hash
        if reward_entry_identifier is not None:
            self.reward_entry_identifier = reward_entry_identifier
        if items is not None:
            self.items = items
        self.vendor_hash = vendor_hash
        if display_properties is not None:
            self.display_properties = display_properties
        if order is not None:
            self.order = order

    @property
    def reward_entry_hash(self):
        """Gets the reward_entry_hash of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501

        The identifier for this reward entry. Runtime data will refer to reward entries by this hash. Only guaranteed unique within the specific Milestone.  # noqa: E501

        :return: The reward_entry_hash of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._reward_entry_hash

    @reward_entry_hash.setter
    def reward_entry_hash(self, reward_entry_hash):
        """Sets the reward_entry_hash of this DestinyMilestoneRewardEntryDefinition.

        The identifier for this reward entry. Runtime data will refer to reward entries by this hash. Only guaranteed unique within the specific Milestone.  # noqa: E501

        :param reward_entry_hash: The reward_entry_hash of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :type: int
        """

        self._reward_entry_hash = reward_entry_hash

    @property
    def reward_entry_identifier(self):
        """Gets the reward_entry_identifier of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501

        The string identifier, if you care about it. Only guaranteed unique within the specific Milestone.  # noqa: E501

        :return: The reward_entry_identifier of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :rtype: str
        """
        return self._reward_entry_identifier

    @reward_entry_identifier.setter
    def reward_entry_identifier(self, reward_entry_identifier):
        """Sets the reward_entry_identifier of this DestinyMilestoneRewardEntryDefinition.

        The string identifier, if you care about it. Only guaranteed unique within the specific Milestone.  # noqa: E501

        :param reward_entry_identifier: The reward_entry_identifier of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :type: str
        """

        self._reward_entry_identifier = reward_entry_identifier

    @property
    def items(self):
        """Gets the items of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501

        The items you will get as rewards, and how much of it you'll get.  # noqa: E501

        :return: The items of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :rtype: list[DestinyItemQuantity]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this DestinyMilestoneRewardEntryDefinition.

        The items you will get as rewards, and how much of it you'll get.  # noqa: E501

        :param items: The items of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :type: list[DestinyItemQuantity]
        """

        self._items = items

    @property
    def vendor_hash(self):
        """Gets the vendor_hash of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501

        If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in order to redeem the reward. Use this hash to look up the DestinyVendorDefinition.  # noqa: E501

        :return: The vendor_hash of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._vendor_hash

    @vendor_hash.setter
    def vendor_hash(self, vendor_hash):
        """Sets the vendor_hash of this DestinyMilestoneRewardEntryDefinition.

        If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in order to redeem the reward. Use this hash to look up the DestinyVendorDefinition.  # noqa: E501

        :param vendor_hash: The vendor_hash of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :type: int
        """

        self._vendor_hash = vendor_hash

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501

        For us to bother returning this info, we should be able to return some kind of information about why these rewards are grouped together. This is ideally that information. Look at how confident I am that this will always remain true.  # noqa: E501

        :return: The display_properties of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :rtype: DestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyMilestoneRewardEntryDefinition.

        For us to bother returning this info, we should be able to return some kind of information about why these rewards are grouped together. This is ideally that information. Look at how confident I am that this will always remain true.  # noqa: E501

        :param display_properties: The display_properties of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :type: DestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def order(self):
        """Gets the order of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501

        If you want to follow BNet's ordering of these rewards, use this number within a given category to order the rewards. Yeah, I know. I feel dirty too.  # noqa: E501

        :return: The order of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this DestinyMilestoneRewardEntryDefinition.

        If you want to follow BNet's ordering of these rewards, use this number within a given category to order the rewards. Yeah, I know. I feel dirty too.  # noqa: E501

        :param order: The order of this DestinyMilestoneRewardEntryDefinition.  # noqa: E501
        :type: int
        """

        self._order = order

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyMilestoneRewardEntryDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
