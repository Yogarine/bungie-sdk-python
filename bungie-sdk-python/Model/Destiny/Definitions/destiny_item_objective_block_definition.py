# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyItemObjectiveBlockDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'objective_hashes': 'list[int]',
        'display_activity_hashes': 'list[int]',
        'require_full_objective_completion': 'bool',
        'questline_item_hash': 'int',
        'narrative': 'str',
        'objective_verb_name': 'str',
        'quest_type_identifier': 'str',
        'quest_type_hash': 'int',
        'per_objective_display_properties': 'list[DestinyObjectiveDisplayProperties]'
    }

    attribute_map = {
        'objective_hashes': 'objectiveHashes',
        'display_activity_hashes': 'displayActivityHashes',
        'require_full_objective_completion': 'requireFullObjectiveCompletion',
        'questline_item_hash': 'questlineItemHash',
        'narrative': 'narrative',
        'objective_verb_name': 'objectiveVerbName',
        'quest_type_identifier': 'questTypeIdentifier',
        'quest_type_hash': 'questTypeHash',
        'per_objective_display_properties': 'perObjectiveDisplayProperties'
    }

    def __init__(self, objective_hashes=None, display_activity_hashes=None, require_full_objective_completion=None, questline_item_hash=None, narrative=None, objective_verb_name=None, quest_type_identifier=None, quest_type_hash=None, per_objective_display_properties=None):  # noqa: E501
        """DestinyItemObjectiveBlockDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._objective_hashes = None
        self._display_activity_hashes = None
        self._require_full_objective_completion = None
        self._questline_item_hash = None
        self._narrative = None
        self._objective_verb_name = None
        self._quest_type_identifier = None
        self._quest_type_hash = None
        self._per_objective_display_properties = None
        self.discriminator = None

        if objective_hashes is not None:
            self.objective_hashes = objective_hashes
        if display_activity_hashes is not None:
            self.display_activity_hashes = display_activity_hashes
        if require_full_objective_completion is not None:
            self.require_full_objective_completion = require_full_objective_completion
        if questline_item_hash is not None:
            self.questline_item_hash = questline_item_hash
        if narrative is not None:
            self.narrative = narrative
        if objective_verb_name is not None:
            self.objective_verb_name = objective_verb_name
        if quest_type_identifier is not None:
            self.quest_type_identifier = quest_type_identifier
        if quest_type_hash is not None:
            self.quest_type_hash = quest_type_hash
        if per_objective_display_properties is not None:
            self.per_objective_display_properties = per_objective_display_properties

    @property
    def objective_hashes(self):
        """Gets the objective_hashes of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in the order that they should be rendered.  # noqa: E501

        :return: The objective_hashes of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: list[int]
        """
        return self._objective_hashes

    @objective_hashes.setter
    def objective_hashes(self, objective_hashes):
        """Sets the objective_hashes of this DestinyItemObjectiveBlockDefinition.

        The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in the order that they should be rendered.  # noqa: E501

        :param objective_hashes: The objective_hashes of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: list[int]
        """

        self._objective_hashes = objective_hashes

    @property
    def display_activity_hashes(self):
        """Gets the display_activity_hashes of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        For every entry in objectiveHashes, there is a corresponding entry in this array at the same index. If the objective is meant to be associated with a specific DestinyActivityDefinition, there will be a valid hash at that index. Otherwise, it will be invalid (0).  Rendered somewhat obsolete by perObjectiveDisplayProperties, which currently has much the same information but may end up with more info in the future.  # noqa: E501

        :return: The display_activity_hashes of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: list[int]
        """
        return self._display_activity_hashes

    @display_activity_hashes.setter
    def display_activity_hashes(self, display_activity_hashes):
        """Sets the display_activity_hashes of this DestinyItemObjectiveBlockDefinition.

        For every entry in objectiveHashes, there is a corresponding entry in this array at the same index. If the objective is meant to be associated with a specific DestinyActivityDefinition, there will be a valid hash at that index. Otherwise, it will be invalid (0).  Rendered somewhat obsolete by perObjectiveDisplayProperties, which currently has much the same information but may end up with more info in the future.  # noqa: E501

        :param display_activity_hashes: The display_activity_hashes of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: list[int]
        """

        self._display_activity_hashes = display_activity_hashes

    @property
    def require_full_objective_completion(self):
        """Gets the require_full_objective_completion of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        If True, all objectives must be completed for the step to be completed. If False, any one objective can be completed for the step to be completed.  # noqa: E501

        :return: The require_full_objective_completion of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: bool
        """
        return self._require_full_objective_completion

    @require_full_objective_completion.setter
    def require_full_objective_completion(self, require_full_objective_completion):
        """Sets the require_full_objective_completion of this DestinyItemObjectiveBlockDefinition.

        If True, all objectives must be completed for the step to be completed. If False, any one objective can be completed for the step to be completed.  # noqa: E501

        :param require_full_objective_completion: The require_full_objective_completion of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: bool
        """

        self._require_full_objective_completion = require_full_objective_completion

    @property
    def questline_item_hash(self):
        """Gets the questline_item_hash of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.  # noqa: E501

        :return: The questline_item_hash of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: int
        """
        return self._questline_item_hash

    @questline_item_hash.setter
    def questline_item_hash(self, questline_item_hash):
        """Sets the questline_item_hash of this DestinyItemObjectiveBlockDefinition.

        The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.  # noqa: E501

        :param questline_item_hash: The questline_item_hash of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: int
        """

        self._questline_item_hash = questline_item_hash

    @property
    def narrative(self):
        """Gets the narrative of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        The localized string for narrative text related to this quest step, if any.  # noqa: E501

        :return: The narrative of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: str
        """
        return self._narrative

    @narrative.setter
    def narrative(self, narrative):
        """Sets the narrative of this DestinyItemObjectiveBlockDefinition.

        The localized string for narrative text related to this quest step, if any.  # noqa: E501

        :param narrative: The narrative of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: str
        """

        self._narrative = narrative

    @property
    def objective_verb_name(self):
        """Gets the objective_verb_name of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        The localized string describing an action to be performed associated with the objectives, if any.  # noqa: E501

        :return: The objective_verb_name of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: str
        """
        return self._objective_verb_name

    @objective_verb_name.setter
    def objective_verb_name(self, objective_verb_name):
        """Sets the objective_verb_name of this DestinyItemObjectiveBlockDefinition.

        The localized string describing an action to be performed associated with the objectives, if any.  # noqa: E501

        :param objective_verb_name: The objective_verb_name of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: str
        """

        self._objective_verb_name = objective_verb_name

    @property
    def quest_type_identifier(self):
        """Gets the quest_type_identifier of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        The identifier for the type of quest being performed, if any. Not associated with any fixed definition, yet.  # noqa: E501

        :return: The quest_type_identifier of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: str
        """
        return self._quest_type_identifier

    @quest_type_identifier.setter
    def quest_type_identifier(self, quest_type_identifier):
        """Sets the quest_type_identifier of this DestinyItemObjectiveBlockDefinition.

        The identifier for the type of quest being performed, if any. Not associated with any fixed definition, yet.  # noqa: E501

        :param quest_type_identifier: The quest_type_identifier of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: str
        """

        self._quest_type_identifier = quest_type_identifier

    @property
    def quest_type_hash(self):
        """Gets the quest_type_hash of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        A hashed value for the questTypeIdentifier, because apparently I like to be redundant.  # noqa: E501

        :return: The quest_type_hash of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: int
        """
        return self._quest_type_hash

    @quest_type_hash.setter
    def quest_type_hash(self, quest_type_hash):
        """Sets the quest_type_hash of this DestinyItemObjectiveBlockDefinition.

        A hashed value for the questTypeIdentifier, because apparently I like to be redundant.  # noqa: E501

        :param quest_type_hash: The quest_type_hash of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: int
        """

        self._quest_type_hash = quest_type_hash

    @property
    def per_objective_display_properties(self):
        """Gets the per_objective_display_properties of this DestinyItemObjectiveBlockDefinition.  # noqa: E501

        One entry per Objective on the item, it will have related display information.  # noqa: E501

        :return: The per_objective_display_properties of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :rtype: list[DestinyObjectiveDisplayProperties]
        """
        return self._per_objective_display_properties

    @per_objective_display_properties.setter
    def per_objective_display_properties(self, per_objective_display_properties):
        """Sets the per_objective_display_properties of this DestinyItemObjectiveBlockDefinition.

        One entry per Objective on the item, it will have related display information.  # noqa: E501

        :param per_objective_display_properties: The per_objective_display_properties of this DestinyItemObjectiveBlockDefinition.  # noqa: E501
        :type: list[DestinyObjectiveDisplayProperties]
        """

        self._per_objective_display_properties = per_objective_display_properties

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyItemObjectiveBlockDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
