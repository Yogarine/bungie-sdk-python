# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyQuestStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'quest_hash': 'int',
        'step_hash': 'int',
        'step_objectives': 'list[DestinyObjectiveProgress]',
        'tracked': 'bool',
        'item_instance_id': 'int',
        'completed': 'bool',
        'redeemed': 'bool',
        'started': 'bool',
        'vendor_hash': 'int'
    }

    attribute_map = {
        'quest_hash': 'questHash',
        'step_hash': 'stepHash',
        'step_objectives': 'stepObjectives',
        'tracked': 'tracked',
        'item_instance_id': 'itemInstanceId',
        'completed': 'completed',
        'redeemed': 'redeemed',
        'started': 'started',
        'vendor_hash': 'vendorHash'
    }

    def __init__(self, quest_hash=None, step_hash=None, step_objectives=None, tracked=None, item_instance_id=None, completed=None, redeemed=None, started=None, vendor_hash=None):  # noqa: E501
        """DestinyQuestStatus - a model defined in OpenAPI"""  # noqa: E501

        self._quest_hash = None
        self._step_hash = None
        self._step_objectives = None
        self._tracked = None
        self._item_instance_id = None
        self._completed = None
        self._redeemed = None
        self._started = None
        self._vendor_hash = None
        self.discriminator = None

        if quest_hash is not None:
            self.quest_hash = quest_hash
        if step_hash is not None:
            self.step_hash = step_hash
        if step_objectives is not None:
            self.step_objectives = step_objectives
        if tracked is not None:
            self.tracked = tracked
        if item_instance_id is not None:
            self.item_instance_id = item_instance_id
        if completed is not None:
            self.completed = completed
        if redeemed is not None:
            self.redeemed = redeemed
        if started is not None:
            self.started = started
        self.vendor_hash = vendor_hash

    @property
    def quest_hash(self):
        """Gets the quest_hash of this DestinyQuestStatus.  # noqa: E501

        The hash identifier for the Quest Item. (Note: Quests are defined as Items, and thus you would use this to look up the quest's DestinyInventoryItemDefinition). For information on all steps in the quest, you can then examine its DestinyInventoryItemDefinition.setData property for Quest Steps (which are *also* items). You can use the Item Definition to display human readable data about the overall quest.  # noqa: E501

        :return: The quest_hash of this DestinyQuestStatus.  # noqa: E501
        :rtype: int
        """
        return self._quest_hash

    @quest_hash.setter
    def quest_hash(self, quest_hash):
        """Sets the quest_hash of this DestinyQuestStatus.

        The hash identifier for the Quest Item. (Note: Quests are defined as Items, and thus you would use this to look up the quest's DestinyInventoryItemDefinition). For information on all steps in the quest, you can then examine its DestinyInventoryItemDefinition.setData property for Quest Steps (which are *also* items). You can use the Item Definition to display human readable data about the overall quest.  # noqa: E501

        :param quest_hash: The quest_hash of this DestinyQuestStatus.  # noqa: E501
        :type: int
        """

        self._quest_hash = quest_hash

    @property
    def step_hash(self):
        """Gets the step_hash of this DestinyQuestStatus.  # noqa: E501

        The hash identifier of the current Quest Step, which is also a DestinyInventoryItemDefinition. You can use this to get human readable data about the current step and what to do in that step.  # noqa: E501

        :return: The step_hash of this DestinyQuestStatus.  # noqa: E501
        :rtype: int
        """
        return self._step_hash

    @step_hash.setter
    def step_hash(self, step_hash):
        """Sets the step_hash of this DestinyQuestStatus.

        The hash identifier of the current Quest Step, which is also a DestinyInventoryItemDefinition. You can use this to get human readable data about the current step and what to do in that step.  # noqa: E501

        :param step_hash: The step_hash of this DestinyQuestStatus.  # noqa: E501
        :type: int
        """

        self._step_hash = step_hash

    @property
    def step_objectives(self):
        """Gets the step_objectives of this DestinyQuestStatus.  # noqa: E501

        A step can have multiple objectives. This will give you the progress for each objective in the current step, in the order in which they are rendered in-game.  # noqa: E501

        :return: The step_objectives of this DestinyQuestStatus.  # noqa: E501
        :rtype: list[DestinyObjectiveProgress]
        """
        return self._step_objectives

    @step_objectives.setter
    def step_objectives(self, step_objectives):
        """Sets the step_objectives of this DestinyQuestStatus.

        A step can have multiple objectives. This will give you the progress for each objective in the current step, in the order in which they are rendered in-game.  # noqa: E501

        :param step_objectives: The step_objectives of this DestinyQuestStatus.  # noqa: E501
        :type: list[DestinyObjectiveProgress]
        """

        self._step_objectives = step_objectives

    @property
    def tracked(self):
        """Gets the tracked of this DestinyQuestStatus.  # noqa: E501

        Whether or not the quest is tracked  # noqa: E501

        :return: The tracked of this DestinyQuestStatus.  # noqa: E501
        :rtype: bool
        """
        return self._tracked

    @tracked.setter
    def tracked(self, tracked):
        """Sets the tracked of this DestinyQuestStatus.

        Whether or not the quest is tracked  # noqa: E501

        :param tracked: The tracked of this DestinyQuestStatus.  # noqa: E501
        :type: bool
        """

        self._tracked = tracked

    @property
    def item_instance_id(self):
        """Gets the item_instance_id of this DestinyQuestStatus.  # noqa: E501

        The current Quest Step will be an instanced item in the player's inventory. If you care about that, this is the instance ID of that item.  # noqa: E501

        :return: The item_instance_id of this DestinyQuestStatus.  # noqa: E501
        :rtype: int
        """
        return self._item_instance_id

    @item_instance_id.setter
    def item_instance_id(self, item_instance_id):
        """Sets the item_instance_id of this DestinyQuestStatus.

        The current Quest Step will be an instanced item in the player's inventory. If you care about that, this is the instance ID of that item.  # noqa: E501

        :param item_instance_id: The item_instance_id of this DestinyQuestStatus.  # noqa: E501
        :type: int
        """

        self._item_instance_id = item_instance_id

    @property
    def completed(self):
        """Gets the completed of this DestinyQuestStatus.  # noqa: E501

        Whether or not the whole quest has been completed, regardless of whether or not you have redeemed the rewards for the quest.  # noqa: E501

        :return: The completed of this DestinyQuestStatus.  # noqa: E501
        :rtype: bool
        """
        return self._completed

    @completed.setter
    def completed(self, completed):
        """Sets the completed of this DestinyQuestStatus.

        Whether or not the whole quest has been completed, regardless of whether or not you have redeemed the rewards for the quest.  # noqa: E501

        :param completed: The completed of this DestinyQuestStatus.  # noqa: E501
        :type: bool
        """

        self._completed = completed

    @property
    def redeemed(self):
        """Gets the redeemed of this DestinyQuestStatus.  # noqa: E501

        Whether or not you have redeemed rewards for this quest.  # noqa: E501

        :return: The redeemed of this DestinyQuestStatus.  # noqa: E501
        :rtype: bool
        """
        return self._redeemed

    @redeemed.setter
    def redeemed(self, redeemed):
        """Sets the redeemed of this DestinyQuestStatus.

        Whether or not you have redeemed rewards for this quest.  # noqa: E501

        :param redeemed: The redeemed of this DestinyQuestStatus.  # noqa: E501
        :type: bool
        """

        self._redeemed = redeemed

    @property
    def started(self):
        """Gets the started of this DestinyQuestStatus.  # noqa: E501

        Whether or not you have started this quest.  # noqa: E501

        :return: The started of this DestinyQuestStatus.  # noqa: E501
        :rtype: bool
        """
        return self._started

    @started.setter
    def started(self, started):
        """Sets the started of this DestinyQuestStatus.

        Whether or not you have started this quest.  # noqa: E501

        :param started: The started of this DestinyQuestStatus.  # noqa: E501
        :type: bool
        """

        self._started = started

    @property
    def vendor_hash(self):
        """Gets the vendor_hash of this DestinyQuestStatus.  # noqa: E501

        If the quest has a related Vendor that you should talk to in order to initiate the quest/earn rewards/continue the quest, this will be the hash identifier of that Vendor. Look it up its DestinyVendorDefinition.  # noqa: E501

        :return: The vendor_hash of this DestinyQuestStatus.  # noqa: E501
        :rtype: int
        """
        return self._vendor_hash

    @vendor_hash.setter
    def vendor_hash(self, vendor_hash):
        """Sets the vendor_hash of this DestinyQuestStatus.

        If the quest has a related Vendor that you should talk to in order to initiate the quest/earn rewards/continue the quest, this will be the hash identifier of that Vendor. Look it up its DestinyVendorDefinition.  # noqa: E501

        :param vendor_hash: The vendor_hash of this DestinyQuestStatus.  # noqa: E501
        :type: int
        """

        self._vendor_hash = vendor_hash

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyQuestStatus):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
