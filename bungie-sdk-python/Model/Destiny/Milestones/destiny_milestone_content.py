# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyMilestoneContent(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'about': 'str',
        'status': 'str',
        'tips': 'list[str]',
        'item_categories': 'list[DestinyMilestoneContentItemCategory]'
    }

    attribute_map = {
        'about': 'about',
        'status': 'status',
        'tips': 'tips',
        'item_categories': 'itemCategories'
    }

    def __init__(self, about=None, status=None, tips=None, item_categories=None):  # noqa: E501
        """DestinyMilestoneContent - a model defined in OpenAPI"""  # noqa: E501

        self._about = None
        self._status = None
        self._tips = None
        self._item_categories = None
        self.discriminator = None

        if about is not None:
            self.about = about
        if status is not None:
            self.status = status
        if tips is not None:
            self.tips = tips
        if item_categories is not None:
            self.item_categories = item_categories

    @property
    def about(self):
        """Gets the about of this DestinyMilestoneContent.  # noqa: E501

        The \"About this Milestone\" text from the Firehose.  # noqa: E501

        :return: The about of this DestinyMilestoneContent.  # noqa: E501
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this DestinyMilestoneContent.

        The \"About this Milestone\" text from the Firehose.  # noqa: E501

        :param about: The about of this DestinyMilestoneContent.  # noqa: E501
        :type: str
        """

        self._about = about

    @property
    def status(self):
        """Gets the status of this DestinyMilestoneContent.  # noqa: E501

        The Current Status of the Milestone, as driven by the Firehose.  # noqa: E501

        :return: The status of this DestinyMilestoneContent.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this DestinyMilestoneContent.

        The Current Status of the Milestone, as driven by the Firehose.  # noqa: E501

        :param status: The status of this DestinyMilestoneContent.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def tips(self):
        """Gets the tips of this DestinyMilestoneContent.  # noqa: E501

        A list of tips, provided by the Firehose.  # noqa: E501

        :return: The tips of this DestinyMilestoneContent.  # noqa: E501
        :rtype: list[str]
        """
        return self._tips

    @tips.setter
    def tips(self, tips):
        """Sets the tips of this DestinyMilestoneContent.

        A list of tips, provided by the Firehose.  # noqa: E501

        :param tips: The tips of this DestinyMilestoneContent.  # noqa: E501
        :type: list[str]
        """

        self._tips = tips

    @property
    def item_categories(self):
        """Gets the item_categories of this DestinyMilestoneContent.  # noqa: E501

        If DPS has defined items related to this Milestone, they can categorize those items in the Firehose. That data will then be returned as item categories here.  # noqa: E501

        :return: The item_categories of this DestinyMilestoneContent.  # noqa: E501
        :rtype: list[DestinyMilestoneContentItemCategory]
        """
        return self._item_categories

    @item_categories.setter
    def item_categories(self, item_categories):
        """Sets the item_categories of this DestinyMilestoneContent.

        If DPS has defined items related to this Milestone, they can categorize those items in the Firehose. That data will then be returned as item categories here.  # noqa: E501

        :param item_categories: The item_categories of this DestinyMilestoneContent.  # noqa: E501
        :type: list[DestinyMilestoneContentItemCategory]
        """

        self._item_categories = item_categories

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyMilestoneContent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
