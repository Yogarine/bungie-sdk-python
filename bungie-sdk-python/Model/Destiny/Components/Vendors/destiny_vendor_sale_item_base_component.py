# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyVendorSaleItemBaseComponent(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'vendor_item_index': 'int',
        'item_hash': 'int',
        'override_style_item_hash': 'int',
        'quantity': 'int',
        'costs': 'list[DestinyItemQuantity]',
        'override_next_refresh_date': 'datetime'
    }

    attribute_map = {
        'vendor_item_index': 'vendorItemIndex',
        'item_hash': 'itemHash',
        'override_style_item_hash': 'overrideStyleItemHash',
        'quantity': 'quantity',
        'costs': 'costs',
        'override_next_refresh_date': 'overrideNextRefreshDate'
    }

    def __init__(self, vendor_item_index=None, item_hash=None, override_style_item_hash=None, quantity=None, costs=None, override_next_refresh_date=None):  # noqa: E501
        """DestinyVendorSaleItemBaseComponent - a model defined in OpenAPI"""  # noqa: E501

        self._vendor_item_index = None
        self._item_hash = None
        self._override_style_item_hash = None
        self._quantity = None
        self._costs = None
        self._override_next_refresh_date = None
        self.discriminator = None

        if vendor_item_index is not None:
            self.vendor_item_index = vendor_item_index
        if item_hash is not None:
            self.item_hash = item_hash
        self.override_style_item_hash = override_style_item_hash
        if quantity is not None:
            self.quantity = quantity
        if costs is not None:
            self.costs = costs
        self.override_next_refresh_date = override_next_refresh_date

    @property
    def vendor_item_index(self):
        """Gets the vendor_item_index of this DestinyVendorSaleItemBaseComponent.  # noqa: E501

        The index into the DestinyVendorDefinition.itemList property. Note that this means Vendor data *is* Content Version dependent: make sure you have the latest content before you use Vendor data, or these indexes may mismatch.   Most systems avoid this problem, but Vendors is one area where we are unable to reasonably avoid content dependency at the moment.  # noqa: E501

        :return: The vendor_item_index of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :rtype: int
        """
        return self._vendor_item_index

    @vendor_item_index.setter
    def vendor_item_index(self, vendor_item_index):
        """Sets the vendor_item_index of this DestinyVendorSaleItemBaseComponent.

        The index into the DestinyVendorDefinition.itemList property. Note that this means Vendor data *is* Content Version dependent: make sure you have the latest content before you use Vendor data, or these indexes may mismatch.   Most systems avoid this problem, but Vendors is one area where we are unable to reasonably avoid content dependency at the moment.  # noqa: E501

        :param vendor_item_index: The vendor_item_index of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :type: int
        """

        self._vendor_item_index = vendor_item_index

    @property
    def item_hash(self):
        """Gets the item_hash of this DestinyVendorSaleItemBaseComponent.  # noqa: E501

        The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinition of the sale item.  # noqa: E501

        :return: The item_hash of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :rtype: int
        """
        return self._item_hash

    @item_hash.setter
    def item_hash(self, item_hash):
        """Sets the item_hash of this DestinyVendorSaleItemBaseComponent.

        The hash of the item being sold, as a quick shortcut for looking up the DestinyInventoryItemDefinition of the sale item.  # noqa: E501

        :param item_hash: The item_hash of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :type: int
        """

        self._item_hash = item_hash

    @property
    def override_style_item_hash(self):
        """Gets the override_style_item_hash of this DestinyVendorSaleItemBaseComponent.  # noqa: E501

        If populated, this is the hash of the item whose icon (and other secondary styles, but *not* the human readable strings) should override whatever icons/styles are on the item being sold.  If you don't do this, certain items whose styles are being overridden by socketed items - such as the \"Recycle Shader\" item - would show whatever their default icon/style is, and it wouldn't be pretty or look accurate.  # noqa: E501

        :return: The override_style_item_hash of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :rtype: int
        """
        return self._override_style_item_hash

    @override_style_item_hash.setter
    def override_style_item_hash(self, override_style_item_hash):
        """Sets the override_style_item_hash of this DestinyVendorSaleItemBaseComponent.

        If populated, this is the hash of the item whose icon (and other secondary styles, but *not* the human readable strings) should override whatever icons/styles are on the item being sold.  If you don't do this, certain items whose styles are being overridden by socketed items - such as the \"Recycle Shader\" item - would show whatever their default icon/style is, and it wouldn't be pretty or look accurate.  # noqa: E501

        :param override_style_item_hash: The override_style_item_hash of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :type: int
        """

        self._override_style_item_hash = override_style_item_hash

    @property
    def quantity(self):
        """Gets the quantity of this DestinyVendorSaleItemBaseComponent.  # noqa: E501

        How much of the item you'll be getting.  # noqa: E501

        :return: The quantity of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DestinyVendorSaleItemBaseComponent.

        How much of the item you'll be getting.  # noqa: E501

        :param quantity: The quantity of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def costs(self):
        """Gets the costs of this DestinyVendorSaleItemBaseComponent.  # noqa: E501

        A summary of the current costs of the item.  # noqa: E501

        :return: The costs of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :rtype: list[DestinyItemQuantity]
        """
        return self._costs

    @costs.setter
    def costs(self, costs):
        """Sets the costs of this DestinyVendorSaleItemBaseComponent.

        A summary of the current costs of the item.  # noqa: E501

        :param costs: The costs of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :type: list[DestinyItemQuantity]
        """

        self._costs = costs

    @property
    def override_next_refresh_date(self):
        """Gets the override_next_refresh_date of this DestinyVendorSaleItemBaseComponent.  # noqa: E501

        If this item has its own custom date where it may be removed from the Vendor's rotation, this is that date.  Note that there's not actually any guarantee that it will go away: it could be chosen again and end up still being in the Vendor's sale items! But this is the next date where that test will occur, and is also the date that the game shows for availability on things like Bounties being sold. So it's the best we can give.  # noqa: E501

        :return: The override_next_refresh_date of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :rtype: datetime
        """
        return self._override_next_refresh_date

    @override_next_refresh_date.setter
    def override_next_refresh_date(self, override_next_refresh_date):
        """Sets the override_next_refresh_date of this DestinyVendorSaleItemBaseComponent.

        If this item has its own custom date where it may be removed from the Vendor's rotation, this is that date.  Note that there's not actually any guarantee that it will go away: it could be chosen again and end up still being in the Vendor's sale items! But this is the next date where that test will occur, and is also the date that the game shows for availability on things like Bounties being sold. So it's the best we can give.  # noqa: E501

        :param override_next_refresh_date: The override_next_refresh_date of this DestinyVendorSaleItemBaseComponent.  # noqa: E501
        :type: datetime
        """

        self._override_next_refresh_date = override_next_refresh_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyVendorSaleItemBaseComponent):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
