# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class GroupMemberApplication(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'group_id': 'int',
        'creation_date': 'datetime',
        'resolve_state': 'int',
        'resolve_date': 'datetime',
        'resolved_by_membership_id': 'int',
        'request_message': 'str',
        'resolve_message': 'str',
        'destiny_user_info': 'UserInfoCard',
        'bungie_net_user_info': 'UserInfoCard'
    }

    attribute_map = {
        'group_id': 'groupId',
        'creation_date': 'creationDate',
        'resolve_state': 'resolveState',
        'resolve_date': 'resolveDate',
        'resolved_by_membership_id': 'resolvedByMembershipId',
        'request_message': 'requestMessage',
        'resolve_message': 'resolveMessage',
        'destiny_user_info': 'destinyUserInfo',
        'bungie_net_user_info': 'bungieNetUserInfo'
    }

    def __init__(self, group_id=None, creation_date=None, resolve_state=None, resolve_date=None, resolved_by_membership_id=None, request_message=None, resolve_message=None, destiny_user_info=None, bungie_net_user_info=None):  # noqa: E501
        """GroupMemberApplication - a model defined in OpenAPI"""  # noqa: E501

        self._group_id = None
        self._creation_date = None
        self._resolve_state = None
        self._resolve_date = None
        self._resolved_by_membership_id = None
        self._request_message = None
        self._resolve_message = None
        self._destiny_user_info = None
        self._bungie_net_user_info = None
        self.discriminator = None

        if group_id is not None:
            self.group_id = group_id
        if creation_date is not None:
            self.creation_date = creation_date
        if resolve_state is not None:
            self.resolve_state = resolve_state
        self.resolve_date = resolve_date
        self.resolved_by_membership_id = resolved_by_membership_id
        if request_message is not None:
            self.request_message = request_message
        if resolve_message is not None:
            self.resolve_message = resolve_message
        if destiny_user_info is not None:
            self.destiny_user_info = destiny_user_info
        if bungie_net_user_info is not None:
            self.bungie_net_user_info = bungie_net_user_info

    @property
    def group_id(self):
        """Gets the group_id of this GroupMemberApplication.  # noqa: E501


        :return: The group_id of this GroupMemberApplication.  # noqa: E501
        :rtype: int
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this GroupMemberApplication.


        :param group_id: The group_id of this GroupMemberApplication.  # noqa: E501
        :type: int
        """

        self._group_id = group_id

    @property
    def creation_date(self):
        """Gets the creation_date of this GroupMemberApplication.  # noqa: E501


        :return: The creation_date of this GroupMemberApplication.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this GroupMemberApplication.


        :param creation_date: The creation_date of this GroupMemberApplication.  # noqa: E501
        :type: datetime
        """

        self._creation_date = creation_date

    @property
    def resolve_state(self):
        """Gets the resolve_state of this GroupMemberApplication.  # noqa: E501


        :return: The resolve_state of this GroupMemberApplication.  # noqa: E501
        :rtype: int
        """
        return self._resolve_state

    @resolve_state.setter
    def resolve_state(self, resolve_state):
        """Sets the resolve_state of this GroupMemberApplication.


        :param resolve_state: The resolve_state of this GroupMemberApplication.  # noqa: E501
        :type: int
        """

        self._resolve_state = resolve_state

    @property
    def resolve_date(self):
        """Gets the resolve_date of this GroupMemberApplication.  # noqa: E501


        :return: The resolve_date of this GroupMemberApplication.  # noqa: E501
        :rtype: datetime
        """
        return self._resolve_date

    @resolve_date.setter
    def resolve_date(self, resolve_date):
        """Sets the resolve_date of this GroupMemberApplication.


        :param resolve_date: The resolve_date of this GroupMemberApplication.  # noqa: E501
        :type: datetime
        """

        self._resolve_date = resolve_date

    @property
    def resolved_by_membership_id(self):
        """Gets the resolved_by_membership_id of this GroupMemberApplication.  # noqa: E501


        :return: The resolved_by_membership_id of this GroupMemberApplication.  # noqa: E501
        :rtype: int
        """
        return self._resolved_by_membership_id

    @resolved_by_membership_id.setter
    def resolved_by_membership_id(self, resolved_by_membership_id):
        """Sets the resolved_by_membership_id of this GroupMemberApplication.


        :param resolved_by_membership_id: The resolved_by_membership_id of this GroupMemberApplication.  # noqa: E501
        :type: int
        """

        self._resolved_by_membership_id = resolved_by_membership_id

    @property
    def request_message(self):
        """Gets the request_message of this GroupMemberApplication.  # noqa: E501


        :return: The request_message of this GroupMemberApplication.  # noqa: E501
        :rtype: str
        """
        return self._request_message

    @request_message.setter
    def request_message(self, request_message):
        """Sets the request_message of this GroupMemberApplication.


        :param request_message: The request_message of this GroupMemberApplication.  # noqa: E501
        :type: str
        """

        self._request_message = request_message

    @property
    def resolve_message(self):
        """Gets the resolve_message of this GroupMemberApplication.  # noqa: E501


        :return: The resolve_message of this GroupMemberApplication.  # noqa: E501
        :rtype: str
        """
        return self._resolve_message

    @resolve_message.setter
    def resolve_message(self, resolve_message):
        """Sets the resolve_message of this GroupMemberApplication.


        :param resolve_message: The resolve_message of this GroupMemberApplication.  # noqa: E501
        :type: str
        """

        self._resolve_message = resolve_message

    @property
    def destiny_user_info(self):
        """Gets the destiny_user_info of this GroupMemberApplication.  # noqa: E501


        :return: The destiny_user_info of this GroupMemberApplication.  # noqa: E501
        :rtype: UserInfoCard
        """
        return self._destiny_user_info

    @destiny_user_info.setter
    def destiny_user_info(self, destiny_user_info):
        """Sets the destiny_user_info of this GroupMemberApplication.


        :param destiny_user_info: The destiny_user_info of this GroupMemberApplication.  # noqa: E501
        :type: UserInfoCard
        """

        self._destiny_user_info = destiny_user_info

    @property
    def bungie_net_user_info(self):
        """Gets the bungie_net_user_info of this GroupMemberApplication.  # noqa: E501


        :return: The bungie_net_user_info of this GroupMemberApplication.  # noqa: E501
        :rtype: UserInfoCard
        """
        return self._bungie_net_user_info

    @bungie_net_user_info.setter
    def bungie_net_user_info(self, bungie_net_user_info):
        """Sets the bungie_net_user_info of this GroupMemberApplication.


        :param bungie_net_user_info: The bungie_net_user_info of this GroupMemberApplication.  # noqa: E501
        :type: UserInfoCard
        """

        self._bungie_net_user_info = bungie_net_user_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GroupMemberApplication):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
