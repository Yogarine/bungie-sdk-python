# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyVendorItemSocketOverride(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'single_item_hash': 'int',
        'randomized_options_count': 'int',
        'socket_type_hash': 'int'
    }

    attribute_map = {
        'single_item_hash': 'singleItemHash',
        'randomized_options_count': 'randomizedOptionsCount',
        'socket_type_hash': 'socketTypeHash'
    }

    def __init__(self, single_item_hash=None, randomized_options_count=None, socket_type_hash=None):  # noqa: E501
        """DestinyVendorItemSocketOverride - a model defined in OpenAPI"""  # noqa: E501

        self._single_item_hash = None
        self._randomized_options_count = None
        self._socket_type_hash = None
        self.discriminator = None

        self.single_item_hash = single_item_hash
        if randomized_options_count is not None:
            self.randomized_options_count = randomized_options_count
        if socket_type_hash is not None:
            self.socket_type_hash = socket_type_hash

    @property
    def single_item_hash(self):
        """Gets the single_item_hash of this DestinyVendorItemSocketOverride.  # noqa: E501

        If this is populated, the socket will be overridden with a specific plug.  If this isn't populated, it's being overridden by something more complicated that is only known by the Game Server and God, which means we can't tell you in advance what it'll be.  # noqa: E501

        :return: The single_item_hash of this DestinyVendorItemSocketOverride.  # noqa: E501
        :rtype: int
        """
        return self._single_item_hash

    @single_item_hash.setter
    def single_item_hash(self, single_item_hash):
        """Sets the single_item_hash of this DestinyVendorItemSocketOverride.

        If this is populated, the socket will be overridden with a specific plug.  If this isn't populated, it's being overridden by something more complicated that is only known by the Game Server and God, which means we can't tell you in advance what it'll be.  # noqa: E501

        :param single_item_hash: The single_item_hash of this DestinyVendorItemSocketOverride.  # noqa: E501
        :type: int
        """

        self._single_item_hash = single_item_hash

    @property
    def randomized_options_count(self):
        """Gets the randomized_options_count of this DestinyVendorItemSocketOverride.  # noqa: E501

        If this is greater than -1, the number of randomized plugs on this socket will be set to this quantity instead of whatever it's set to by default.  # noqa: E501

        :return: The randomized_options_count of this DestinyVendorItemSocketOverride.  # noqa: E501
        :rtype: int
        """
        return self._randomized_options_count

    @randomized_options_count.setter
    def randomized_options_count(self, randomized_options_count):
        """Sets the randomized_options_count of this DestinyVendorItemSocketOverride.

        If this is greater than -1, the number of randomized plugs on this socket will be set to this quantity instead of whatever it's set to by default.  # noqa: E501

        :param randomized_options_count: The randomized_options_count of this DestinyVendorItemSocketOverride.  # noqa: E501
        :type: int
        """

        self._randomized_options_count = randomized_options_count

    @property
    def socket_type_hash(self):
        """Gets the socket_type_hash of this DestinyVendorItemSocketOverride.  # noqa: E501

        This appears to be used to select which socket ultimately gets the override defined here.  # noqa: E501

        :return: The socket_type_hash of this DestinyVendorItemSocketOverride.  # noqa: E501
        :rtype: int
        """
        return self._socket_type_hash

    @socket_type_hash.setter
    def socket_type_hash(self, socket_type_hash):
        """Sets the socket_type_hash of this DestinyVendorItemSocketOverride.

        This appears to be used to select which socket ultimately gets the override defined here.  # noqa: E501

        :param socket_type_hash: The socket_type_hash of this DestinyVendorItemSocketOverride.  # noqa: E501
        :type: int
        """

        self._socket_type_hash = socket_type_hash

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyVendorItemSocketOverride):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
