# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyVendorInteractionDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'interaction_index': 'int',
        'replies': 'list[DestinyVendorInteractionReplyDefinition]',
        'vendor_category_index': 'int',
        'questline_item_hash': 'int',
        'sack_interaction_list': 'list[DestinyVendorInteractionSackEntryDefinition]',
        'ui_interaction_type': 'int',
        'interaction_type': 'int',
        'reward_block_label': 'str',
        'reward_vendor_category_index': 'int',
        'flavor_line_one': 'str',
        'flavor_line_two': 'str',
        'header_display_properties': 'DestinyDisplayPropertiesDefinition',
        'instructions': 'str'
    }

    attribute_map = {
        'interaction_index': 'interactionIndex',
        'replies': 'replies',
        'vendor_category_index': 'vendorCategoryIndex',
        'questline_item_hash': 'questlineItemHash',
        'sack_interaction_list': 'sackInteractionList',
        'ui_interaction_type': 'uiInteractionType',
        'interaction_type': 'interactionType',
        'reward_block_label': 'rewardBlockLabel',
        'reward_vendor_category_index': 'rewardVendorCategoryIndex',
        'flavor_line_one': 'flavorLineOne',
        'flavor_line_two': 'flavorLineTwo',
        'header_display_properties': 'headerDisplayProperties',
        'instructions': 'instructions'
    }

    def __init__(self, interaction_index=None, replies=None, vendor_category_index=None, questline_item_hash=None, sack_interaction_list=None, ui_interaction_type=None, interaction_type=None, reward_block_label=None, reward_vendor_category_index=None, flavor_line_one=None, flavor_line_two=None, header_display_properties=None, instructions=None):  # noqa: E501
        """DestinyVendorInteractionDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._interaction_index = None
        self._replies = None
        self._vendor_category_index = None
        self._questline_item_hash = None
        self._sack_interaction_list = None
        self._ui_interaction_type = None
        self._interaction_type = None
        self._reward_block_label = None
        self._reward_vendor_category_index = None
        self._flavor_line_one = None
        self._flavor_line_two = None
        self._header_display_properties = None
        self._instructions = None
        self.discriminator = None

        if interaction_index is not None:
            self.interaction_index = interaction_index
        if replies is not None:
            self.replies = replies
        if vendor_category_index is not None:
            self.vendor_category_index = vendor_category_index
        if questline_item_hash is not None:
            self.questline_item_hash = questline_item_hash
        if sack_interaction_list is not None:
            self.sack_interaction_list = sack_interaction_list
        if ui_interaction_type is not None:
            self.ui_interaction_type = ui_interaction_type
        if interaction_type is not None:
            self.interaction_type = interaction_type
        if reward_block_label is not None:
            self.reward_block_label = reward_block_label
        if reward_vendor_category_index is not None:
            self.reward_vendor_category_index = reward_vendor_category_index
        if flavor_line_one is not None:
            self.flavor_line_one = flavor_line_one
        if flavor_line_two is not None:
            self.flavor_line_two = flavor_line_two
        if header_display_properties is not None:
            self.header_display_properties = header_display_properties
        if instructions is not None:
            self.instructions = instructions

    @property
    def interaction_index(self):
        """Gets the interaction_index of this DestinyVendorInteractionDefinition.  # noqa: E501

        The position of this interaction in its parent array. Note that this is NOT content agnostic, and should not be used as such.  # noqa: E501

        :return: The interaction_index of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: int
        """
        return self._interaction_index

    @interaction_index.setter
    def interaction_index(self, interaction_index):
        """Sets the interaction_index of this DestinyVendorInteractionDefinition.

        The position of this interaction in its parent array. Note that this is NOT content agnostic, and should not be used as such.  # noqa: E501

        :param interaction_index: The interaction_index of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: int
        """

        self._interaction_index = interaction_index

    @property
    def replies(self):
        """Gets the replies of this DestinyVendorInteractionDefinition.  # noqa: E501

        The potential replies that the user can make to the interaction.  # noqa: E501

        :return: The replies of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: list[DestinyVendorInteractionReplyDefinition]
        """
        return self._replies

    @replies.setter
    def replies(self, replies):
        """Sets the replies of this DestinyVendorInteractionDefinition.

        The potential replies that the user can make to the interaction.  # noqa: E501

        :param replies: The replies of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: list[DestinyVendorInteractionReplyDefinition]
        """

        self._replies = replies

    @property
    def vendor_category_index(self):
        """Gets the vendor_category_index of this DestinyVendorInteractionDefinition.  # noqa: E501

        If >= 0, this is the category of sale items to show along with this interaction dialog.  # noqa: E501

        :return: The vendor_category_index of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: int
        """
        return self._vendor_category_index

    @vendor_category_index.setter
    def vendor_category_index(self, vendor_category_index):
        """Sets the vendor_category_index of this DestinyVendorInteractionDefinition.

        If >= 0, this is the category of sale items to show along with this interaction dialog.  # noqa: E501

        :param vendor_category_index: The vendor_category_index of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: int
        """

        self._vendor_category_index = vendor_category_index

    @property
    def questline_item_hash(self):
        """Gets the questline_item_hash of this DestinyVendorInteractionDefinition.  # noqa: E501

        If this interaction dialog is about a quest, this is the questline related to the interaction. You can use this to show the quest overview, or even the character's status with the quest if you use it to find the character's current Quest Step by checking their inventory against this questlineItemHash's DestinyInventoryItemDefinition.setData.  # noqa: E501

        :return: The questline_item_hash of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: int
        """
        return self._questline_item_hash

    @questline_item_hash.setter
    def questline_item_hash(self, questline_item_hash):
        """Sets the questline_item_hash of this DestinyVendorInteractionDefinition.

        If this interaction dialog is about a quest, this is the questline related to the interaction. You can use this to show the quest overview, or even the character's status with the quest if you use it to find the character's current Quest Step by checking their inventory against this questlineItemHash's DestinyInventoryItemDefinition.setData.  # noqa: E501

        :param questline_item_hash: The questline_item_hash of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: int
        """

        self._questline_item_hash = questline_item_hash

    @property
    def sack_interaction_list(self):
        """Gets the sack_interaction_list of this DestinyVendorInteractionDefinition.  # noqa: E501

        If this interaction is meant to show you sacks, this is the list of types of sacks to be shown. If empty, the interaction is not meant to show sacks.  # noqa: E501

        :return: The sack_interaction_list of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: list[DestinyVendorInteractionSackEntryDefinition]
        """
        return self._sack_interaction_list

    @sack_interaction_list.setter
    def sack_interaction_list(self, sack_interaction_list):
        """Sets the sack_interaction_list of this DestinyVendorInteractionDefinition.

        If this interaction is meant to show you sacks, this is the list of types of sacks to be shown. If empty, the interaction is not meant to show sacks.  # noqa: E501

        :param sack_interaction_list: The sack_interaction_list of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: list[DestinyVendorInteractionSackEntryDefinition]
        """

        self._sack_interaction_list = sack_interaction_list

    @property
    def ui_interaction_type(self):
        """Gets the ui_interaction_type of this DestinyVendorInteractionDefinition.  # noqa: E501

        A UI hint for the behavior of the interaction screen. This is useful to determine what type of interaction is occurring, such as a prompt to receive a rank up reward or a prompt to choose a reward for completing a quest. The hash isn't as useful as the Enum in retrospect, well what can you do. Try using interactionType instead.  # noqa: E501

        :return: The ui_interaction_type of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: int
        """
        return self._ui_interaction_type

    @ui_interaction_type.setter
    def ui_interaction_type(self, ui_interaction_type):
        """Sets the ui_interaction_type of this DestinyVendorInteractionDefinition.

        A UI hint for the behavior of the interaction screen. This is useful to determine what type of interaction is occurring, such as a prompt to receive a rank up reward or a prompt to choose a reward for completing a quest. The hash isn't as useful as the Enum in retrospect, well what can you do. Try using interactionType instead.  # noqa: E501

        :param ui_interaction_type: The ui_interaction_type of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: int
        """

        self._ui_interaction_type = ui_interaction_type

    @property
    def interaction_type(self):
        """Gets the interaction_type of this DestinyVendorInteractionDefinition.  # noqa: E501

        The enumerated version of the possible UI hints for vendor interactions, which is a little easier to grok than the hash found in uiInteractionType.  # noqa: E501

        :return: The interaction_type of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: int
        """
        return self._interaction_type

    @interaction_type.setter
    def interaction_type(self, interaction_type):
        """Sets the interaction_type of this DestinyVendorInteractionDefinition.

        The enumerated version of the possible UI hints for vendor interactions, which is a little easier to grok than the hash found in uiInteractionType.  # noqa: E501

        :param interaction_type: The interaction_type of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: int
        """

        self._interaction_type = interaction_type

    @property
    def reward_block_label(self):
        """Gets the reward_block_label of this DestinyVendorInteractionDefinition.  # noqa: E501

        If this interaction is displaying rewards, this is the text to use for the header of the reward-displaying section of the interaction.  # noqa: E501

        :return: The reward_block_label of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: str
        """
        return self._reward_block_label

    @reward_block_label.setter
    def reward_block_label(self, reward_block_label):
        """Sets the reward_block_label of this DestinyVendorInteractionDefinition.

        If this interaction is displaying rewards, this is the text to use for the header of the reward-displaying section of the interaction.  # noqa: E501

        :param reward_block_label: The reward_block_label of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: str
        """

        self._reward_block_label = reward_block_label

    @property
    def reward_vendor_category_index(self):
        """Gets the reward_vendor_category_index of this DestinyVendorInteractionDefinition.  # noqa: E501

        If the vendor's reward list is sourced from one of his categories, this is the index into the category array of items to show.  # noqa: E501

        :return: The reward_vendor_category_index of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: int
        """
        return self._reward_vendor_category_index

    @reward_vendor_category_index.setter
    def reward_vendor_category_index(self, reward_vendor_category_index):
        """Sets the reward_vendor_category_index of this DestinyVendorInteractionDefinition.

        If the vendor's reward list is sourced from one of his categories, this is the index into the category array of items to show.  # noqa: E501

        :param reward_vendor_category_index: The reward_vendor_category_index of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: int
        """

        self._reward_vendor_category_index = reward_vendor_category_index

    @property
    def flavor_line_one(self):
        """Gets the flavor_line_one of this DestinyVendorInteractionDefinition.  # noqa: E501

        If the vendor interaction has flavor text, this is some of it.  # noqa: E501

        :return: The flavor_line_one of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: str
        """
        return self._flavor_line_one

    @flavor_line_one.setter
    def flavor_line_one(self, flavor_line_one):
        """Sets the flavor_line_one of this DestinyVendorInteractionDefinition.

        If the vendor interaction has flavor text, this is some of it.  # noqa: E501

        :param flavor_line_one: The flavor_line_one of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: str
        """

        self._flavor_line_one = flavor_line_one

    @property
    def flavor_line_two(self):
        """Gets the flavor_line_two of this DestinyVendorInteractionDefinition.  # noqa: E501

        If the vendor interaction has flavor text, this is the rest of it.  # noqa: E501

        :return: The flavor_line_two of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: str
        """
        return self._flavor_line_two

    @flavor_line_two.setter
    def flavor_line_two(self, flavor_line_two):
        """Sets the flavor_line_two of this DestinyVendorInteractionDefinition.

        If the vendor interaction has flavor text, this is the rest of it.  # noqa: E501

        :param flavor_line_two: The flavor_line_two of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: str
        """

        self._flavor_line_two = flavor_line_two

    @property
    def header_display_properties(self):
        """Gets the header_display_properties of this DestinyVendorInteractionDefinition.  # noqa: E501

        The header for the interaction dialog.  # noqa: E501

        :return: The header_display_properties of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: DestinyDisplayPropertiesDefinition
        """
        return self._header_display_properties

    @header_display_properties.setter
    def header_display_properties(self, header_display_properties):
        """Sets the header_display_properties of this DestinyVendorInteractionDefinition.

        The header for the interaction dialog.  # noqa: E501

        :param header_display_properties: The header_display_properties of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: DestinyDisplayPropertiesDefinition
        """

        self._header_display_properties = header_display_properties

    @property
    def instructions(self):
        """Gets the instructions of this DestinyVendorInteractionDefinition.  # noqa: E501

        The localized text telling the player what to do when they see this dialog.  # noqa: E501

        :return: The instructions of this DestinyVendorInteractionDefinition.  # noqa: E501
        :rtype: str
        """
        return self._instructions

    @instructions.setter
    def instructions(self, instructions):
        """Sets the instructions of this DestinyVendorInteractionDefinition.

        The localized text telling the player what to do when they see this dialog.  # noqa: E501

        :param instructions: The instructions of this DestinyVendorInteractionDefinition.  # noqa: E501
        :type: str
        """

        self._instructions = instructions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyVendorInteractionDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
