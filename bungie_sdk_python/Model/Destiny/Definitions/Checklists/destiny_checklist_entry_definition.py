# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyChecklistEntryDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'hash': 'int',
        'display_properties': 'DestinyDisplayPropertiesDefinition',
        'destination_hash': 'int',
        'location_hash': 'int',
        'bubble_hash': 'int',
        'activity_hash': 'int',
        'item_hash': 'int',
        'vendor_hash': 'int',
        'vendor_interaction_index': 'int',
        'scope': 'int'
    }

    attribute_map = {
        'hash': 'hash',
        'display_properties': 'displayProperties',
        'destination_hash': 'destinationHash',
        'location_hash': 'locationHash',
        'bubble_hash': 'bubbleHash',
        'activity_hash': 'activityHash',
        'item_hash': 'itemHash',
        'vendor_hash': 'vendorHash',
        'vendor_interaction_index': 'vendorInteractionIndex',
        'scope': 'scope'
    }

    def __init__(self, hash=None, display_properties=None, destination_hash=None, location_hash=None, bubble_hash=None, activity_hash=None, item_hash=None, vendor_hash=None, vendor_interaction_index=None, scope=None):  # noqa: E501
        """DestinyChecklistEntryDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._hash = None
        self._display_properties = None
        self._destination_hash = None
        self._location_hash = None
        self._bubble_hash = None
        self._activity_hash = None
        self._item_hash = None
        self._vendor_hash = None
        self._vendor_interaction_index = None
        self._scope = None
        self.discriminator = None

        if hash is not None:
            self.hash = hash
        if display_properties is not None:
            self.display_properties = display_properties
        self.destination_hash = destination_hash
        self.location_hash = location_hash
        self.bubble_hash = bubble_hash
        self.activity_hash = activity_hash
        self.item_hash = item_hash
        self.vendor_hash = vendor_hash
        self.vendor_interaction_index = vendor_interaction_index
        if scope is not None:
            self.scope = scope

    @property
    def hash(self):
        """Gets the hash of this DestinyChecklistEntryDefinition.  # noqa: E501

        The identifier for this Checklist entry. Guaranteed unique only within this Checklist Definition, and not globally/for all checklists.  # noqa: E501

        :return: The hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this DestinyChecklistEntryDefinition.

        The identifier for this Checklist entry. Guaranteed unique only within this Checklist Definition, and not globally/for all checklists.  # noqa: E501

        :param hash: The hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._hash = hash

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyChecklistEntryDefinition.  # noqa: E501

        Even if no other associations exist, we will give you *something* for display properties. In cases where we have no associated entities, it may be as simple as a numerical identifier.  # noqa: E501

        :return: The display_properties of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: DestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyChecklistEntryDefinition.

        Even if no other associations exist, we will give you *something* for display properties. In cases where we have no associated entities, it may be as simple as a numerical identifier.  # noqa: E501

        :param display_properties: The display_properties of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: DestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def destination_hash(self):
        """Gets the destination_hash of this DestinyChecklistEntryDefinition.  # noqa: E501


        :return: The destination_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._destination_hash

    @destination_hash.setter
    def destination_hash(self, destination_hash):
        """Sets the destination_hash of this DestinyChecklistEntryDefinition.


        :param destination_hash: The destination_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._destination_hash = destination_hash

    @property
    def location_hash(self):
        """Gets the location_hash of this DestinyChecklistEntryDefinition.  # noqa: E501


        :return: The location_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._location_hash

    @location_hash.setter
    def location_hash(self, location_hash):
        """Sets the location_hash of this DestinyChecklistEntryDefinition.


        :param location_hash: The location_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._location_hash = location_hash

    @property
    def bubble_hash(self):
        """Gets the bubble_hash of this DestinyChecklistEntryDefinition.  # noqa: E501

        Note that a Bubble's hash doesn't uniquely identify a \"top level\" entity in Destiny. Only the combination of location and bubble can uniquely identify a place in the world of Destiny: so if bubbleHash is populated, locationHash must too be populated for it to have any meaning.  You can use this property if it is populated to look up the DestinyLocationDefinition's associated .locationReleases[].activityBubbleName property.  # noqa: E501

        :return: The bubble_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._bubble_hash

    @bubble_hash.setter
    def bubble_hash(self, bubble_hash):
        """Sets the bubble_hash of this DestinyChecklistEntryDefinition.

        Note that a Bubble's hash doesn't uniquely identify a \"top level\" entity in Destiny. Only the combination of location and bubble can uniquely identify a place in the world of Destiny: so if bubbleHash is populated, locationHash must too be populated for it to have any meaning.  You can use this property if it is populated to look up the DestinyLocationDefinition's associated .locationReleases[].activityBubbleName property.  # noqa: E501

        :param bubble_hash: The bubble_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._bubble_hash = bubble_hash

    @property
    def activity_hash(self):
        """Gets the activity_hash of this DestinyChecklistEntryDefinition.  # noqa: E501


        :return: The activity_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._activity_hash

    @activity_hash.setter
    def activity_hash(self, activity_hash):
        """Sets the activity_hash of this DestinyChecklistEntryDefinition.


        :param activity_hash: The activity_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._activity_hash = activity_hash

    @property
    def item_hash(self):
        """Gets the item_hash of this DestinyChecklistEntryDefinition.  # noqa: E501


        :return: The item_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._item_hash

    @item_hash.setter
    def item_hash(self, item_hash):
        """Sets the item_hash of this DestinyChecklistEntryDefinition.


        :param item_hash: The item_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._item_hash = item_hash

    @property
    def vendor_hash(self):
        """Gets the vendor_hash of this DestinyChecklistEntryDefinition.  # noqa: E501


        :return: The vendor_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._vendor_hash

    @vendor_hash.setter
    def vendor_hash(self, vendor_hash):
        """Sets the vendor_hash of this DestinyChecklistEntryDefinition.


        :param vendor_hash: The vendor_hash of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._vendor_hash = vendor_hash

    @property
    def vendor_interaction_index(self):
        """Gets the vendor_interaction_index of this DestinyChecklistEntryDefinition.  # noqa: E501


        :return: The vendor_interaction_index of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._vendor_interaction_index

    @vendor_interaction_index.setter
    def vendor_interaction_index(self, vendor_interaction_index):
        """Sets the vendor_interaction_index of this DestinyChecklistEntryDefinition.


        :param vendor_interaction_index: The vendor_interaction_index of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._vendor_interaction_index = vendor_interaction_index

    @property
    def scope(self):
        """Gets the scope of this DestinyChecklistEntryDefinition.  # noqa: E501

        The scope at which this specific entry can be computed.  # noqa: E501

        :return: The scope of this DestinyChecklistEntryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this DestinyChecklistEntryDefinition.

        The scope at which this specific entry can be computed.  # noqa: E501

        :param scope: The scope of this DestinyChecklistEntryDefinition.  # noqa: E501
        :type: int
        """

        self._scope = scope

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyChecklistEntryDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
