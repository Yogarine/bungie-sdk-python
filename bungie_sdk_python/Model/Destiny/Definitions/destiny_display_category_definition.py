# coding: utf-8

"""
    Bungie.Net API

    These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.  # noqa: E501

    OpenAPI spec version: 2.3.6
    Contact: support@bungie.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class DestinyDisplayCategoryDefinition(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'identifier': 'str',
        'display_category_hash': 'int',
        'display_properties': 'DestinyDisplayPropertiesDefinition',
        'display_in_banner': 'bool',
        'progression_hash': 'int',
        'sort_order': 'int',
        'display_style_hash': 'int',
        'display_style_identifier': 'str'
    }

    attribute_map = {
        'identifier': 'identifier',
        'display_category_hash': 'displayCategoryHash',
        'display_properties': 'displayProperties',
        'display_in_banner': 'displayInBanner',
        'progression_hash': 'progressionHash',
        'sort_order': 'sortOrder',
        'display_style_hash': 'displayStyleHash',
        'display_style_identifier': 'displayStyleIdentifier'
    }

    def __init__(self, identifier=None, display_category_hash=None, display_properties=None, display_in_banner=None, progression_hash=None, sort_order=None, display_style_hash=None, display_style_identifier=None):  # noqa: E501
        """DestinyDisplayCategoryDefinition - a model defined in OpenAPI"""  # noqa: E501

        self._identifier = None
        self._display_category_hash = None
        self._display_properties = None
        self._display_in_banner = None
        self._progression_hash = None
        self._sort_order = None
        self._display_style_hash = None
        self._display_style_identifier = None
        self.discriminator = None

        if identifier is not None:
            self.identifier = identifier
        if display_category_hash is not None:
            self.display_category_hash = display_category_hash
        if display_properties is not None:
            self.display_properties = display_properties
        if display_in_banner is not None:
            self.display_in_banner = display_in_banner
        self.progression_hash = progression_hash
        if sort_order is not None:
            self.sort_order = sort_order
        self.display_style_hash = display_style_hash
        if display_style_identifier is not None:
            self.display_style_identifier = display_style_identifier

    @property
    def identifier(self):
        """Gets the identifier of this DestinyDisplayCategoryDefinition.  # noqa: E501

        A string identifier for the display category.  # noqa: E501

        :return: The identifier of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this DestinyDisplayCategoryDefinition.

        A string identifier for the display category.  # noqa: E501

        :param identifier: The identifier of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: str
        """

        self._identifier = identifier

    @property
    def display_category_hash(self):
        """Gets the display_category_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501


        :return: The display_category_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._display_category_hash

    @display_category_hash.setter
    def display_category_hash(self, display_category_hash):
        """Sets the display_category_hash of this DestinyDisplayCategoryDefinition.


        :param display_category_hash: The display_category_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: int
        """

        self._display_category_hash = display_category_hash

    @property
    def display_properties(self):
        """Gets the display_properties of this DestinyDisplayCategoryDefinition.  # noqa: E501


        :return: The display_properties of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: DestinyDisplayPropertiesDefinition
        """
        return self._display_properties

    @display_properties.setter
    def display_properties(self, display_properties):
        """Sets the display_properties of this DestinyDisplayCategoryDefinition.


        :param display_properties: The display_properties of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: DestinyDisplayPropertiesDefinition
        """

        self._display_properties = display_properties

    @property
    def display_in_banner(self):
        """Gets the display_in_banner of this DestinyDisplayCategoryDefinition.  # noqa: E501

        If true, this category should be displayed in the \"Banner\" section of the vendor's UI.  # noqa: E501

        :return: The display_in_banner of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: bool
        """
        return self._display_in_banner

    @display_in_banner.setter
    def display_in_banner(self, display_in_banner):
        """Sets the display_in_banner of this DestinyDisplayCategoryDefinition.

        If true, this category should be displayed in the \"Banner\" section of the vendor's UI.  # noqa: E501

        :param display_in_banner: The display_in_banner of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: bool
        """

        self._display_in_banner = display_in_banner

    @property
    def progression_hash(self):
        """Gets the progression_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501

        If it exists, this is the hash identifier of a DestinyProgressionDefinition that represents the progression to show on this display category.  Specific categories can now have thier own distinct progression, apparently. So that's cool.  # noqa: E501

        :return: The progression_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._progression_hash

    @progression_hash.setter
    def progression_hash(self, progression_hash):
        """Sets the progression_hash of this DestinyDisplayCategoryDefinition.

        If it exists, this is the hash identifier of a DestinyProgressionDefinition that represents the progression to show on this display category.  Specific categories can now have thier own distinct progression, apparently. So that's cool.  # noqa: E501

        :param progression_hash: The progression_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: int
        """

        self._progression_hash = progression_hash

    @property
    def sort_order(self):
        """Gets the sort_order of this DestinyDisplayCategoryDefinition.  # noqa: E501

        If this category sorts items in a nonstandard way, this will be the way we sort.  # noqa: E501

        :return: The sort_order of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this DestinyDisplayCategoryDefinition.

        If this category sorts items in a nonstandard way, this will be the way we sort.  # noqa: E501

        :param sort_order: The sort_order of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: int
        """

        self._sort_order = sort_order

    @property
    def display_style_hash(self):
        """Gets the display_style_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501

        An indicator of how the category will be displayed in the UI. It's up to you to do something cool or interesting in response to this, or just to treat it as a normal category.  # noqa: E501

        :return: The display_style_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: int
        """
        return self._display_style_hash

    @display_style_hash.setter
    def display_style_hash(self, display_style_hash):
        """Sets the display_style_hash of this DestinyDisplayCategoryDefinition.

        An indicator of how the category will be displayed in the UI. It's up to you to do something cool or interesting in response to this, or just to treat it as a normal category.  # noqa: E501

        :param display_style_hash: The display_style_hash of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: int
        """

        self._display_style_hash = display_style_hash

    @property
    def display_style_identifier(self):
        """Gets the display_style_identifier of this DestinyDisplayCategoryDefinition.  # noqa: E501

        An indicator of how the category will be displayed in the UI. It's up to you to do something cool or interesting in response to this, or just to treat it as a normal category.  # noqa: E501

        :return: The display_style_identifier of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :rtype: str
        """
        return self._display_style_identifier

    @display_style_identifier.setter
    def display_style_identifier(self, display_style_identifier):
        """Sets the display_style_identifier of this DestinyDisplayCategoryDefinition.

        An indicator of how the category will be displayed in the UI. It's up to you to do something cool or interesting in response to this, or just to treat it as a normal category.  # noqa: E501

        :param display_style_identifier: The display_style_identifier of this DestinyDisplayCategoryDefinition.  # noqa: E501
        :type: str
        """

        self._display_style_identifier = display_style_identifier

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DestinyDisplayCategoryDefinition):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
